import * as ts from 'typescript';
import { FieldDefinition, FunctionType, InterfaceWithFields, ListType, MapType, SetType } from '@creditkarma/thrift-parser';
import { DefinitionType, IRenderState } from '../../../types';
export declare function createTempVariables(node: InterfaceWithFields, state: IRenderState, withDefault?: boolean): Array<ts.VariableStatement>;
export declare function createEncodeMethod(node: InterfaceWithFields, state: IRenderState): ts.MethodDeclaration;
export declare function createWriteForField(node: InterfaceWithFields, field: FieldDefinition, state: IRenderState): ts.IfStatement;
export declare function createWriteForFieldType(node: InterfaceWithFields, field: FieldDefinition, fieldName: ts.Identifier, state: IRenderState): ts.Block;
export declare function writeValueForIdentifier(id: string, definition: DefinitionType, node: InterfaceWithFields, fieldName: ts.Identifier, state: IRenderState): Array<ts.Expression>;
export declare function writeValueForType(node: InterfaceWithFields, fieldType: FunctionType, fieldName: ts.Identifier, state: IRenderState): Array<ts.Expression>;
export declare function writeValueForField(node: InterfaceWithFields, fieldType: FunctionType, fieldName: ts.Identifier, state: IRenderState): Array<ts.ExpressionStatement>;
export declare function writeStructBegin(structName: string): ts.ExpressionStatement;
export declare function writeStructEnd(): ts.ExpressionStatement;
export declare function writeMapBegin(fieldType: MapType, fieldName: string | ts.Identifier, state: IRenderState): ts.CallExpression;
export declare function writeMapEnd(): ts.CallExpression;
export declare function writeListBegin(fieldType: ListType, fieldName: string | ts.Identifier, state: IRenderState): ts.CallExpression;
export declare function writeListEnd(): ts.CallExpression;
export declare function writeSetBegin(fieldType: SetType, fieldName: string | ts.Identifier, state: IRenderState): ts.CallExpression;
export declare function writeSetEnd(): ts.CallExpression;
export declare function writeFieldBegin(field: FieldDefinition, state: IRenderState): ts.ExpressionStatement;
export declare function writeFieldEnd(): ts.ExpressionStatement;
export declare function writeFieldStop(): ts.ExpressionStatement;
